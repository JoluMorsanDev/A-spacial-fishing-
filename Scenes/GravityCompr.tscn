[gd_scene load_steps=6 format=2]

[ext_resource path="res://Scripts/GravityCompr.gd" type="Script" id=1]

[sub_resource type="Shader" id=7]
code = "shader_type canvas_item;

uniform float strength = 0.025;
uniform float black_radius = 1;

void fragment() {
    // Get direction and distance to the black hole center
    vec2 diff = vec2(0.5, 0.5) - vec2(UV.x, 1.0-UV.y);
    float d = length(diff) * 2.0;
    vec2 dir = normalize(diff);
    float f = clamp(1.0-d, 0.0, 1.0);

    // This is a 0..1 value that will nullify the effect around the bounds of the effect,
    // for a seamless transition between the effect's area and the unaffected world pixels.
    float shelf = smoothstep(0.1, 1, f);
    // Calculate displacement amount
    float displacement = strength / (d*d + 0.01);

    // Calculate distorted screen-space texture coordinates
    vec2 uv = SCREEN_UV + dir * (displacement * shelf);

    // Output pixels from the screen using distorted UVs
    vec3 col = texture(SCREEN_TEXTURE, uv).xyz;
    COLOR.rgb = mix(col, vec3(0,0,0), smoothstep(black_radius-0.01, black_radius+0.01, f));
}"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/strength = 0.03
shader_param/black_radius = 0.65

[sub_resource type="CircleShape2D" id=9]
radius = 105.201

[sub_resource type="Animation" id=10]
resource_name = "as"
length = 1.5
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath(".:modulate")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.5, 1.1, 1.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 0.235294 ), Color( 1, 1, 1, 0.423529 ), Color( 1, 1, 1, 0.129412 ), Color( 1, 1, 1, 0.235294 ) ]
}

[node name="GravityCompr" type="Area2D"]
visible = false
modulate = Color( 1, 1, 1, 0.141181 )
scale = Vector2( 2.75, 2.75 )
z_index = 1
space_override = 1
gravity_point = true
gravity_vec = Vector2( 0, 0 )
gravity = 551.25
priority = 1.0
script = ExtResource( 1 )

[node name="Polygon2D3" type="ColorRect" parent="."]
material = SubResource( 8 )
margin_left = -300.0
margin_top = -300.0
margin_right = -260.0
margin_bottom = -260.0
rect_scale = Vector2( 15, 15 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
shape = SubResource( 9 )
disabled = true

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "as"
anims/as = SubResource( 10 )
